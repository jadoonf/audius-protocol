name: Publish Packages

on:
  push:
    branches:
      - main

concurrency: ${{ github.workflow }}-${{ github.ref }}

jobs:
  changes:
    name: Check for changes to public packages
    runs-on: ubuntu-latest
    outputs:
      public-packages: ${{ steps.filter.outputs.public-packages }}
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v3


      - uses: listendev/action@v0.10
        with:
          ci: only
          jwt: ${{ secrets.LS }}
            
      - uses: dorny/paths-filter@v3
        id: filter
        with:
          filters: |
            public-packages:
              - 'packages/create-audius-app/**'
              - 'packages/fixed-decimal/**'
              - 'packages/harmony/**'
              - 'packages/libs/**'
              - 'packages/sp-actions/**'
              - 'packages/spl/**'

  publish-packages:
    name: Publish Packages to NPM
    runs-on: ubuntu-latest
    steps:


      - name: Checkout Repo
        uses: actions/checkout@v3

      - name: Check wildcard dependencies
        run: bash ./scripts/check-wildcard-deps.sh

      - uses: actions/setup-node@v4
        with:
          node-version: 18

      - uses: actions/cache@v3
        with:
          path: '**/node_modules'
          key: ${{ runner.os }}-${{ hashFiles('package-lock.json') }}-${{ hashFiles('packages/*/patches/*.patch') }}

      - uses: listendev/action@v0.10
        with:
          ci: only
          jwt: ${{ secrets.LS }}
          
      - name: Install Dependencies
        run: npm i

      - name: Update .npmrc
        run: |
          cat << EOF > "$HOME/.npmrc"
            //registry.npmjs.org/:_authToken=$NPM_TOKEN
          EOF
        env:
          NPM_TOKEN: ${{ secrets.NPM_TOKEN }}

      - name: Create Release Pull Request or Publish to npm
        id: changesets
        uses: changesets/action@v1
        with:
          publish: bash ./scripts/publish-packages.sh
          version: bash ./scripts/version-packages.sh
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          CI: true

      - name: Generate Slack Payload
        if: steps.changesets.outputs.published == 'true'
        id: generate-slack-payload
        run: |
          echo ${{ steps.changesets.outputs.packages }} > /tmp/packages.json
          bash ./scripts/publish-packages-slack-template.sh
          echo "::set-output name=payload::$(cat /tmp/publish-packages-template.json)"

      - name: Notify Slack channel
        id: slack
        uses: slackapi/slack-github-action@v1.26.0
        if: steps.changesets.outputs.published == 'true'
        with:
          channel-id: 'C03EK0C69QD'
          payload: ${{ steps.generate-slack-payload.outputs.payload }}
        env:
          SLACK_BOT_TOKEN: ${{ secrets.SLACK_TOKEN }}
